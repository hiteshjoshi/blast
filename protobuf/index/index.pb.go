// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/index/index.proto

package index

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LivenessProbeResponse_State int32

const (
	LivenessProbeResponse_UNKNOWN LivenessProbeResponse_State = 0
	LivenessProbeResponse_ALIVE   LivenessProbeResponse_State = 1
	LivenessProbeResponse_DEAD    LivenessProbeResponse_State = 2
)

var LivenessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
}

var LivenessProbeResponse_State_value = map[string]int32{
	"UNKNOWN": 0,
	"ALIVE":   1,
	"DEAD":    2,
}

func (x LivenessProbeResponse_State) String() string {
	return proto.EnumName(LivenessProbeResponse_State_name, int32(x))
}

func (LivenessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{5, 0}
}

type ReadinessProbeResponse_State int32

const (
	ReadinessProbeResponse_UNKNOWN   ReadinessProbeResponse_State = 0
	ReadinessProbeResponse_READY     ReadinessProbeResponse_State = 1
	ReadinessProbeResponse_NOT_READY ReadinessProbeResponse_State = 2
)

var ReadinessProbeResponse_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "READY",
	2: "NOT_READY",
}

var ReadinessProbeResponse_State_value = map[string]int32{
	"UNKNOWN":   0,
	"READY":     1,
	"NOT_READY": 2,
}

func (x ReadinessProbeResponse_State) String() string {
	return proto.EnumName(ReadinessProbeResponse_State_name, int32(x))
}

func (ReadinessProbeResponse_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{6, 0}
}

type GetNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{0}
}

func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(m, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetNodeResponse struct {
	Metadata             *any.Any `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{1}
}

func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(m, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

func (m *GetNodeResponse) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type SetNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata             *any.Any `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNodeRequest) Reset()         { *m = SetNodeRequest{} }
func (m *SetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeRequest) ProtoMessage()    {}
func (*SetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{2}
}

func (m *SetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeRequest.Unmarshal(m, b)
}
func (m *SetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeRequest.Marshal(b, m, deterministic)
}
func (m *SetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeRequest.Merge(m, src)
}
func (m *SetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeRequest.Size(m)
}
func (m *SetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeRequest proto.InternalMessageInfo

func (m *SetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetNodeRequest) GetMetadata() *any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DeleteNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{3}
}

func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(m, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetClusterResponse struct {
	Cluster              *any.Any `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterResponse) Reset()         { *m = GetClusterResponse{} }
func (m *GetClusterResponse) String() string { return proto.CompactTextString(m) }
func (*GetClusterResponse) ProtoMessage()    {}
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{4}
}

func (m *GetClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterResponse.Unmarshal(m, b)
}
func (m *GetClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterResponse.Marshal(b, m, deterministic)
}
func (m *GetClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterResponse.Merge(m, src)
}
func (m *GetClusterResponse) XXX_Size() int {
	return xxx_messageInfo_GetClusterResponse.Size(m)
}
func (m *GetClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterResponse proto.InternalMessageInfo

func (m *GetClusterResponse) GetCluster() *any.Any {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type LivenessProbeResponse struct {
	State                LivenessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=index.LivenessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *LivenessProbeResponse) Reset()         { *m = LivenessProbeResponse{} }
func (m *LivenessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*LivenessProbeResponse) ProtoMessage()    {}
func (*LivenessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{5}
}

func (m *LivenessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessProbeResponse.Unmarshal(m, b)
}
func (m *LivenessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessProbeResponse.Marshal(b, m, deterministic)
}
func (m *LivenessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessProbeResponse.Merge(m, src)
}
func (m *LivenessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_LivenessProbeResponse.Size(m)
}
func (m *LivenessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessProbeResponse proto.InternalMessageInfo

func (m *LivenessProbeResponse) GetState() LivenessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return LivenessProbeResponse_UNKNOWN
}

type ReadinessProbeResponse struct {
	State                ReadinessProbeResponse_State `protobuf:"varint,1,opt,name=state,proto3,enum=index.ReadinessProbeResponse_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReadinessProbeResponse) Reset()         { *m = ReadinessProbeResponse{} }
func (m *ReadinessProbeResponse) String() string { return proto.CompactTextString(m) }
func (*ReadinessProbeResponse) ProtoMessage()    {}
func (*ReadinessProbeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{6}
}

func (m *ReadinessProbeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessProbeResponse.Unmarshal(m, b)
}
func (m *ReadinessProbeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessProbeResponse.Marshal(b, m, deterministic)
}
func (m *ReadinessProbeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessProbeResponse.Merge(m, src)
}
func (m *ReadinessProbeResponse) XXX_Size() int {
	return xxx_messageInfo_ReadinessProbeResponse.Size(m)
}
func (m *ReadinessProbeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessProbeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessProbeResponse proto.InternalMessageInfo

func (m *ReadinessProbeResponse) GetState() ReadinessProbeResponse_State {
	if m != nil {
		return m.State
	}
	return ReadinessProbeResponse_UNKNOWN
}

type GetDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentRequest) Reset()         { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()    {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{7}
}

func (m *GetDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentRequest.Unmarshal(m, b)
}
func (m *GetDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentRequest.Marshal(b, m, deterministic)
}
func (m *GetDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentRequest.Merge(m, src)
}
func (m *GetDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDocumentRequest.Size(m)
}
func (m *GetDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentRequest proto.InternalMessageInfo

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Fields               *any.Any `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDocumentResponse) Reset()         { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()    {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{8}
}

func (m *GetDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDocumentResponse.Unmarshal(m, b)
}
func (m *GetDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDocumentResponse.Marshal(b, m, deterministic)
}
func (m *GetDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDocumentResponse.Merge(m, src)
}
func (m *GetDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_GetDocumentResponse.Size(m)
}
func (m *GetDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDocumentResponse proto.InternalMessageInfo

func (m *GetDocumentResponse) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentRequest) Reset()         { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()    {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{9}
}

func (m *IndexDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentRequest.Unmarshal(m, b)
}
func (m *IndexDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentRequest.Marshal(b, m, deterministic)
}
func (m *IndexDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentRequest.Merge(m, src)
}
func (m *IndexDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentRequest.Size(m)
}
func (m *IndexDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentRequest proto.InternalMessageInfo

func (m *IndexDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IndexDocumentRequest) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type IndexDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexDocumentResponse) Reset()         { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()    {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{10}
}

func (m *IndexDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexDocumentResponse.Unmarshal(m, b)
}
func (m *IndexDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexDocumentResponse.Marshal(b, m, deterministic)
}
func (m *IndexDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexDocumentResponse.Merge(m, src)
}
func (m *IndexDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_IndexDocumentResponse.Size(m)
}
func (m *IndexDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexDocumentResponse proto.InternalMessageInfo

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentRequest) Reset()         { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()    {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{11}
}

func (m *DeleteDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentRequest.Unmarshal(m, b)
}
func (m *DeleteDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentRequest.Merge(m, src)
}
func (m *DeleteDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentRequest.Size(m)
}
func (m *DeleteDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentRequest proto.InternalMessageInfo

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDocumentResponse) Reset()         { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()    {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{12}
}

func (m *DeleteDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDocumentResponse.Unmarshal(m, b)
}
func (m *DeleteDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDocumentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDocumentResponse.Merge(m, src)
}
func (m *DeleteDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDocumentResponse.Size(m)
}
func (m *DeleteDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDocumentResponse proto.InternalMessageInfo

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchRequest struct {
	SearchRequest        *any.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{13}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *any.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult         *any.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult,proto3" json:"search_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{14}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResult() *any.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

type GetIndexConfigResponse struct {
	IndexConfig          *any.Any `protobuf:"bytes,1,opt,name=index_config,json=indexConfig,proto3" json:"index_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexConfigResponse) Reset()         { *m = GetIndexConfigResponse{} }
func (m *GetIndexConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexConfigResponse) ProtoMessage()    {}
func (*GetIndexConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{15}
}

func (m *GetIndexConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexConfigResponse.Unmarshal(m, b)
}
func (m *GetIndexConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexConfigResponse.Merge(m, src)
}
func (m *GetIndexConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexConfigResponse.Size(m)
}
func (m *GetIndexConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexConfigResponse proto.InternalMessageInfo

func (m *GetIndexConfigResponse) GetIndexConfig() *any.Any {
	if m != nil {
		return m.IndexConfig
	}
	return nil
}

type GetIndexStatsResponse struct {
	IndexStats           *any.Any `protobuf:"bytes,1,opt,name=index_stats,json=indexStats,proto3" json:"index_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIndexStatsResponse) Reset()         { *m = GetIndexStatsResponse{} }
func (m *GetIndexStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetIndexStatsResponse) ProtoMessage()    {}
func (*GetIndexStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{16}
}

func (m *GetIndexStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIndexStatsResponse.Unmarshal(m, b)
}
func (m *GetIndexStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIndexStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetIndexStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIndexStatsResponse.Merge(m, src)
}
func (m *GetIndexStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetIndexStatsResponse.Size(m)
}
func (m *GetIndexStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIndexStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIndexStatsResponse proto.InternalMessageInfo

func (m *GetIndexStatsResponse) GetIndexStats() *any.Any {
	if m != nil {
		return m.IndexStats
	}
	return nil
}

// use for creating snapshot
type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields               *any.Any `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b2daf652facb3ae, []int{17}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetFields() *any.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterEnum("index.LivenessProbeResponse_State", LivenessProbeResponse_State_name, LivenessProbeResponse_State_value)
	proto.RegisterEnum("index.ReadinessProbeResponse_State", ReadinessProbeResponse_State_name, ReadinessProbeResponse_State_value)
	proto.RegisterType((*GetNodeRequest)(nil), "index.GetNodeRequest")
	proto.RegisterType((*GetNodeResponse)(nil), "index.GetNodeResponse")
	proto.RegisterType((*SetNodeRequest)(nil), "index.SetNodeRequest")
	proto.RegisterType((*DeleteNodeRequest)(nil), "index.DeleteNodeRequest")
	proto.RegisterType((*GetClusterResponse)(nil), "index.GetClusterResponse")
	proto.RegisterType((*LivenessProbeResponse)(nil), "index.LivenessProbeResponse")
	proto.RegisterType((*ReadinessProbeResponse)(nil), "index.ReadinessProbeResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "index.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "index.GetDocumentResponse")
	proto.RegisterType((*IndexDocumentRequest)(nil), "index.IndexDocumentRequest")
	proto.RegisterType((*IndexDocumentResponse)(nil), "index.IndexDocumentResponse")
	proto.RegisterType((*DeleteDocumentRequest)(nil), "index.DeleteDocumentRequest")
	proto.RegisterType((*DeleteDocumentResponse)(nil), "index.DeleteDocumentResponse")
	proto.RegisterType((*SearchRequest)(nil), "index.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "index.SearchResponse")
	proto.RegisterType((*GetIndexConfigResponse)(nil), "index.GetIndexConfigResponse")
	proto.RegisterType((*GetIndexStatsResponse)(nil), "index.GetIndexStatsResponse")
	proto.RegisterType((*Document)(nil), "index.Document")
}

func init() { proto.RegisterFile("protobuf/index/index.proto", fileDescriptor_7b2daf652facb3ae) }

var fileDescriptor_7b2daf652facb3ae = []byte{
	// 736 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0xdf, 0x6f, 0xda, 0x3a,
	0x14, 0xc7, 0x03, 0xba, 0x29, 0xf4, 0x50, 0x72, 0xb9, 0xbe, 0x80, 0xda, 0xb4, 0x95, 0x2a, 0xf7,
	0xea, 0xae, 0x93, 0xb6, 0x30, 0x75, 0x9a, 0xba, 0x5f, 0x0f, 0x63, 0x85, 0xb1, 0xaa, 0x55, 0xba,
	0x86, 0x6e, 0xd3, 0xf6, 0x82, 0x02, 0x71, 0x69, 0x34, 0x48, 0x18, 0x76, 0xa6, 0x55, 0xda, 0xdb,
	0xde, 0xf7, 0x37, 0x4f, 0x89, 0x43, 0x88, 0xd3, 0x24, 0x54, 0xda, 0x0b, 0x92, 0x8f, 0xbf, 0xfe,
	0x9c, 0xe3, 0x93, 0xe3, 0xaf, 0x00, 0x75, 0x36, 0x77, 0x99, 0x3b, 0xf4, 0xae, 0x5a, 0xb6, 0x63,
	0x91, 0xef, 0xfc, 0x57, 0x0b, 0x82, 0x48, 0x0e, 0x16, 0xea, 0xd6, 0xd8, 0x75, 0xc7, 0x13, 0xd2,
	0x8a, 0x94, 0xa6, 0x73, 0xc3, 0x15, 0xea, 0x76, 0x72, 0x8b, 0x4c, 0x67, 0x2c, 0xdc, 0xc4, 0x7b,
	0xa0, 0xf4, 0x08, 0xd3, 0x5d, 0x8b, 0x18, 0xe4, 0xab, 0x47, 0x28, 0x43, 0x0a, 0x14, 0x6d, 0x6b,
	0xb3, 0xb0, 0x57, 0x38, 0x58, 0x37, 0x8a, 0xb6, 0x85, 0x8f, 0xe1, 0xef, 0x48, 0x41, 0x67, 0xae,
	0x43, 0x09, 0x7a, 0x04, 0xe5, 0x29, 0x61, 0xa6, 0x65, 0x32, 0x33, 0x10, 0x56, 0x0e, 0xeb, 0x1a,
	0x4f, 0xa2, 0x2d, 0x92, 0x68, 0x6d, 0xe7, 0xc6, 0x88, 0x54, 0xd8, 0x00, 0xa5, 0x9f, 0x9b, 0x46,
	0x60, 0x16, 0xef, 0xc4, 0xdc, 0x87, 0x7f, 0x3a, 0x64, 0x42, 0x18, 0xc9, 0xab, 0xbe, 0x03, 0xa8,
	0x47, 0xd8, 0xf1, 0xc4, 0xa3, 0x8c, 0xcc, 0xa3, 0x0b, 0x68, 0x50, 0x1a, 0xf1, 0x50, 0x6e, 0xfd,
	0x0b, 0x11, 0xfe, 0x01, 0x8d, 0x33, 0xfb, 0x1b, 0x71, 0x08, 0xa5, 0xef, 0xe6, 0xee, 0x70, 0xd9,
	0x89, 0xa7, 0x20, 0x53, 0x66, 0x32, 0x12, 0x60, 0x94, 0x43, 0xac, 0xf1, 0x4f, 0x93, 0x2a, 0xd6,
	0xfa, 0xbe, 0xd2, 0xe0, 0x07, 0xf0, 0x7d, 0x90, 0x83, 0x35, 0xaa, 0x40, 0xe9, 0xbd, 0x7e, 0xaa,
	0x9f, 0x7f, 0xd4, 0x6b, 0x12, 0x5a, 0x07, 0xb9, 0x7d, 0x76, 0xf2, 0xa1, 0x5b, 0x2b, 0xa0, 0x32,
	0xfc, 0xd5, 0xe9, 0xb6, 0x3b, 0xb5, 0x22, 0xfe, 0x59, 0x80, 0xa6, 0x41, 0x4c, 0xcb, 0xbe, 0x9d,
	0xff, 0x99, 0x98, 0x7f, 0x3f, 0xcc, 0x9f, 0xae, 0x16, 0x0b, 0xd0, 0xb2, 0x0a, 0x30, 0xba, 0xed,
	0xce, 0xa7, 0x5a, 0x01, 0x55, 0x61, 0x5d, 0x3f, 0xbf, 0x1c, 0xf0, 0x65, 0x11, 0xff, 0x17, 0x74,
	0xb2, 0xe3, 0x8e, 0xbc, 0x29, 0x71, 0x58, 0xf6, 0xb4, 0xfc, 0x2b, 0xa8, 0xc2, 0x3a, 0x1f, 0xc0,
	0xda, 0x95, 0x4d, 0x26, 0x16, 0xcd, 0xed, 0x77, 0xa8, 0xc1, 0x97, 0x50, 0x3f, 0xf1, 0xef, 0xb1,
	0x22, 0x59, 0x8c, 0x5a, 0xbc, 0x03, 0xf5, 0x21, 0x34, 0x12, 0xd4, 0xb0, 0xb8, 0x3a, 0xc8, 0x23,
	0xd7, 0x73, 0x58, 0x40, 0x96, 0x0d, 0xbe, 0xc0, 0xf7, 0xa0, 0xc1, 0xc7, 0x6b, 0xd5, 0x95, 0x35,
	0x68, 0x26, 0x85, 0xb9, 0xe0, 0x33, 0xa8, 0xf6, 0x89, 0x39, 0x1f, 0x5d, 0x2f, 0x80, 0x2f, 0x40,
	0xa1, 0x41, 0x60, 0x30, 0xe7, 0x91, 0xdc, 0x26, 0x55, 0x69, 0xfc, 0x30, 0x3e, 0xf5, 0x5f, 0x16,
	0x0f, 0x44, 0x33, 0x51, 0x8d, 0x70, 0xd4, 0x9b, 0xe4, 0xd3, 0x36, 0x16, 0x34, 0x5f, 0x89, 0x2f,
	0xa0, 0xd9, 0x23, 0x2c, 0xe8, 0xd2, 0xb1, 0xeb, 0x5c, 0xd9, 0xe3, 0x08, 0x7a, 0x04, 0x1b, 0xc1,
	0x68, 0x0d, 0x46, 0x41, 0x3c, 0x97, 0x59, 0xb1, 0x97, 0x00, 0xac, 0x43, 0x63, 0x81, 0xf4, 0xc7,
	0x8d, 0x46, 0xc4, 0x27, 0xc0, 0x75, 0x03, 0x7f, 0x1c, 0xf3, 0xe7, 0x02, 0xec, 0xe8, 0x38, 0x7e,
	0x0b, 0xe5, 0x45, 0x9f, 0xff, 0x6c, 0x1e, 0x0e, 0x7f, 0x95, 0x40, 0x0e, 0xea, 0x42, 0xcf, 0xa1,
	0x14, 0x5a, 0x1c, 0x6a, 0x84, 0x2f, 0x48, 0x34, 0x45, 0xb5, 0x99, 0x0c, 0xf3, 0x4b, 0x60, 0xc9,
	0x3f, 0xdb, 0x4f, 0x9c, 0xed, 0x27, 0xcf, 0x26, 0xab, 0xe8, 0xfa, 0x06, 0x8c, 0x25, 0xf4, 0x0a,
	0x60, 0xe9, 0x60, 0x68, 0x33, 0x3c, 0x7e, 0xcb, 0xd4, 0x72, 0x08, 0x6d, 0x80, 0xa5, 0xbd, 0xa1,
	0x0c, 0x9d, 0xba, 0xb5, 0xac, 0x3e, 0xe1, 0x84, 0x58, 0x42, 0x2f, 0xa1, 0xdc, 0x77, 0xcc, 0x19,
	0xbd, 0x76, 0x59, 0x26, 0x20, 0xbb, 0x80, 0x1e, 0x54, 0x05, 0xb3, 0xcb, 0x44, 0xec, 0xe4, 0x59,
	0x23, 0x96, 0xd0, 0x09, 0x28, 0xa2, 0x6b, 0x65, 0x92, 0x76, 0x73, 0x4d, 0x0e, 0x4b, 0xe8, 0x0d,
	0x54, 0x62, 0x1e, 0x84, 0x62, 0xb7, 0x4f, 0x3c, 0x65, 0x55, 0x4d, 0xdb, 0x8a, 0x38, 0x3a, 0x54,
	0x05, 0xc3, 0x40, 0xdb, 0xa1, 0x3c, 0xcd, 0x9c, 0xa2, 0x0b, 0xa6, 0x7a, 0x0c, 0x96, 0x0e, 0x0a,
	0xe8, 0x02, 0x14, 0xd1, 0x28, 0xd0, 0x8e, 0xf0, 0xc9, 0x93, 0xc4, 0xdd, 0x8c, 0xdd, 0x18, 0xf2,
	0x08, 0xd6, 0xf8, 0xeb, 0x47, 0xf5, 0x68, 0xf8, 0x62, 0xee, 0xa0, 0x36, 0x12, 0xd1, 0x78, 0xbb,
	0xc5, 0x97, 0xbe, 0xb2, 0xdd, 0xe9, 0xc6, 0xc0, 0x47, 0x40, 0x78, 0xe1, 0x2b, 0x47, 0x20, 0xd5,
	0x0f, 0xb0, 0xf4, 0xfa, 0xe0, 0xf3, 0xff, 0x63, 0x9b, 0x5d, 0x7b, 0x43, 0x6d, 0xe4, 0x4e, 0x5b,
	0x53, 0x97, 0x7a, 0x5f, 0xcc, 0xd6, 0x70, 0x62, 0x52, 0xd6, 0x12, 0xff, 0x00, 0x0d, 0xd7, 0x82,
	0xf5, 0xe3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x27, 0xef, 0x4e, 0x19, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IndexClient is the client API for Index service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexClient interface {
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error)
	Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error)
	ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Index_IndexDocumentClient, error)
	DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Index_DeleteDocumentClient, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error)
	GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error)
}

type indexClient struct {
	cc *grpc.ClientConn
}

func NewIndexClient(cc *grpc.ClientConn) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) SetNode(ctx context.Context, in *SetNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/SetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetCluster(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetClusterResponse, error) {
	out := new(GetClusterResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Snapshot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/index.Index/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) LivenessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LivenessProbeResponse, error) {
	out := new(LivenessProbeResponse)
	err := c.cc.Invoke(ctx, "/index.Index/LivenessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) ReadinessProbe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReadinessProbeResponse, error) {
	out := new(ReadinessProbeResponse)
	err := c.cc.Invoke(ctx, "/index.Index/ReadinessProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) IndexDocument(ctx context.Context, opts ...grpc.CallOption) (Index_IndexDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[0], "/index.Index/IndexDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexIndexDocumentClient{stream}
	return x, nil
}

type Index_IndexDocumentClient interface {
	Send(*IndexDocumentRequest) error
	CloseAndRecv() (*IndexDocumentResponse, error)
	grpc.ClientStream
}

type indexIndexDocumentClient struct {
	grpc.ClientStream
}

func (x *indexIndexDocumentClient) Send(m *IndexDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *indexIndexDocumentClient) CloseAndRecv() (*IndexDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(IndexDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) DeleteDocument(ctx context.Context, opts ...grpc.CallOption) (Index_DeleteDocumentClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Index_serviceDesc.Streams[1], "/index.Index/DeleteDocument", opts...)
	if err != nil {
		return nil, err
	}
	x := &indexDeleteDocumentClient{stream}
	return x, nil
}

type Index_DeleteDocumentClient interface {
	Send(*DeleteDocumentRequest) error
	CloseAndRecv() (*DeleteDocumentResponse, error)
	grpc.ClientStream
}

type indexDeleteDocumentClient struct {
	grpc.ClientStream
}

func (x *indexDeleteDocumentClient) Send(m *DeleteDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *indexDeleteDocumentClient) CloseAndRecv() (*DeleteDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeleteDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *indexClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/index.Index/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexConfigResponse, error) {
	out := new(GetIndexConfigResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetIndexConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexStats(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIndexStatsResponse, error) {
	out := new(GetIndexStatsResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetIndexStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServer is the server API for Index service.
type IndexServer interface {
	GetNode(context.Context, *GetNodeRequest) (*GetNodeResponse, error)
	SetNode(context.Context, *SetNodeRequest) (*empty.Empty, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*empty.Empty, error)
	GetCluster(context.Context, *empty.Empty) (*GetClusterResponse, error)
	Snapshot(context.Context, *empty.Empty) (*empty.Empty, error)
	LivenessProbe(context.Context, *empty.Empty) (*LivenessProbeResponse, error)
	ReadinessProbe(context.Context, *empty.Empty) (*ReadinessProbeResponse, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	IndexDocument(Index_IndexDocumentServer) error
	DeleteDocument(Index_DeleteDocumentServer) error
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	GetIndexConfig(context.Context, *empty.Empty) (*GetIndexConfigResponse, error)
	GetIndexStats(context.Context, *empty.Empty) (*GetIndexStatsResponse, error)
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_SetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).SetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/SetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).SetNode(ctx, req.(*SetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetCluster(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Snapshot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_LivenessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).LivenessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/LivenessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).LivenessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_ReadinessProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).ReadinessProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/ReadinessProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).ReadinessProbe(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_IndexDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IndexServer).IndexDocument(&indexIndexDocumentServer{stream})
}

type Index_IndexDocumentServer interface {
	SendAndClose(*IndexDocumentResponse) error
	Recv() (*IndexDocumentRequest, error)
	grpc.ServerStream
}

type indexIndexDocumentServer struct {
	grpc.ServerStream
}

func (x *indexIndexDocumentServer) SendAndClose(m *IndexDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *indexIndexDocumentServer) Recv() (*IndexDocumentRequest, error) {
	m := new(IndexDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Index_DeleteDocument_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(IndexServer).DeleteDocument(&indexDeleteDocumentServer{stream})
}

type Index_DeleteDocumentServer interface {
	SendAndClose(*DeleteDocumentResponse) error
	Recv() (*DeleteDocumentRequest, error)
	grpc.ServerStream
}

type indexDeleteDocumentServer struct {
	grpc.ServerStream
}

func (x *indexDeleteDocumentServer) SendAndClose(m *DeleteDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *indexDeleteDocumentServer) Recv() (*DeleteDocumentRequest, error) {
	m := new(DeleteDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Index_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetIndexConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexConfig(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetIndexStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexStats(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNode",
			Handler:    _Index_GetNode_Handler,
		},
		{
			MethodName: "SetNode",
			Handler:    _Index_SetNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _Index_DeleteNode_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _Index_GetCluster_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _Index_Snapshot_Handler,
		},
		{
			MethodName: "LivenessProbe",
			Handler:    _Index_LivenessProbe_Handler,
		},
		{
			MethodName: "ReadinessProbe",
			Handler:    _Index_ReadinessProbe_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Index_GetDocument_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Index_Search_Handler,
		},
		{
			MethodName: "GetIndexConfig",
			Handler:    _Index_GetIndexConfig_Handler,
		},
		{
			MethodName: "GetIndexStats",
			Handler:    _Index_GetIndexStats_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "IndexDocument",
			Handler:       _Index_IndexDocument_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteDocument",
			Handler:       _Index_DeleteDocument_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/index/index.proto",
}
